# ===========================================
# ENVIRONMENT CONFIGURATION TEMPLATE
# ===========================================
# Copy this file to .env.dev or .env.prod and configure accordingly

# Environment type - affects default behaviors
# Options: development, production
NODE_ENV=development

# ===========================================
# BACKEND CONFIGURATION
# ===========================================

# Port for the backend server
BACKEND_PORT=4000

# GraphQL endpoint path
BACKEND_GRAPHQL_PATH=/graphql

# WebSocket endpoint path
BACKEND_WEBSOCKET_PATH=/websocket

# File serving path (development only)
# Production uses different file handling
BACKEND_FILE_SERVE_PATH=/content

# CORS origin for cross-origin requests
# Development: http://localhost:4321
# Production: http://localhost:8080
CORS_ORIGIN=http://localhost:4321

# File storage directory
# Development: ./public (relative path)
# Production: /app/files (absolute path for container)
BACKEND_FILE_STORAGE_DIR=./public

# ===========================================
# BACKEND UPLOAD SETTINGS
# ===========================================

# Maximum file size in bytes (50MB default)
BACKEND_UPLOAD_MAX_FILE_SIZE=52428800

# Maximum number of files per upload
BACKEND_UPLOAD_MAX_FILES=10

# Telegram bot token (optional)
# Leave empty in development, set in production if using Telegram features
BACKEND_TELEGRAM_BOT_TOKEN=
# If you have a public production URL, you can set it here
BACKEND_DEV_TELEGRAM_BOT_RESOURCE_URL=

# Session secrets for authentication
# Development: simple dev secret
# Production: MUST be changed to strong, random secrets
BACKEND_SESSION_SECRETS="1=dev-session-secret-change-in-production"

# ===========================================
# BACKEND DEBUG SETTINGS
# ===========================================

# Allow account creation (development only)
# Uncomment in development if needed, disable in production
# BACKEND_CREATE_ACCOUNTS=allowed

# Database query debugging (development only)
# Uncomment to see SQL queries and bindings
# DEBUG=knex:query,knex:bindings

# ===========================================
# FRONTEND CONFIGURATION
# ===========================================

# Port for the frontend server
# Development: 4321 (Astro default)
# Production: 8080
FRONTEND_PORT=4321

# Base URL for file access
# Development: points to backend file server
# Production: relative path through reverse proxy
FRONTEND_FILES_BASE_URL=http://localhost:4000/content

# ===========================================
# FRONTEND CLIENT-SIDE VARIABLES (PUBLIC_*)
# These are exposed to the browser
# ===========================================

# API base URL for client-side requests
# Development: direct backend URL
# Production: empty (relative URLs through reverse proxy)
FRONTEND_PUBLIC_API_BASE_URL=http://localhost:4000

# GraphQL endpoint for client-side requests
# Development: /graphql
# Production: /api/graphql (through reverse proxy)
FRONTEND_PUBLIC_GRAPHQL_ENDPOINT=/graphql

# WebSocket endpoint for client-side connections
# Development: /graphql/ws
# Production: /api/graphql/ws (through reverse proxy)
FRONTEND_PUBLIC_WS_ENDPOINT=/websocket

# ===========================================
# FRONTEND SSR VARIABLES (PRIVATE_*)
# These are used server-side only
# ===========================================

# API base URL for server-side requests
# Development: direct backend URL
# Production: internal Docker service name
FRONTEND_PRIVATE_API_BASE_URL=http://localhost:4000

# GraphQL endpoint for server-side requests
# Development: /graphql
# Production: /api/graphql
FRONTEND_PRIVATE_GRAPHQL_ENDPOINT=/graphql

# ===========================================
# DATABASE CONFIGURATION
# ===========================================

# Database container creation settings
POSTGRES_USER=archive
# Development: simple password
# Production: MUST use strong password
POSTGRES_PASSWORD=archive
# Development: can use any name
# Production: use production-specific database name
POSTGRES_DB=change_me_in_production

# Backend database connection settings
# Development: localhost (direct connection)
# Production: database (Docker service name)
BACKEND_POSTGRES_HOST=localhost
BACKEND_POSTGRES_PORT=5432

# ===========================================
# DOCKER SERVICE NAMES
# Used in production Docker Compose setup
# ===========================================

DOCKER_FRONTEND_HOST=client
DOCKER_BACKEND_HOST=server