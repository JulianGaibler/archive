# Backend Dockerfile - Multi-stage build for production
FROM node:22-alpine AS builder

WORKDIR /app

COPY backend/ ./

RUN npm ci

# Build the backend
RUN npm run build

# Production stage
FROM node:22-alpine AS production

# Install wget for health checks and ffmpeg for media processing
RUN apk add --no-cache wget ffmpeg

WORKDIR /app

# Copy package files
COPY backend/package*.json ./

# Install only production dependencies + migration dependencies
RUN npm ci --only=production && \
    npm install tsx typescript && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Copy database migrations
COPY backend/db ./db

# Copy entrypoint script
COPY backend/docker-scripts/docker-entrypoint.sh ./
RUN chmod +x docker-entrypoint.sh

# Create storage directories with proper structure
ARG BACKEND_FILE_STORAGE_DIR
ENV BACKEND_FILE_STORAGE_DIR=${BACKEND_FILE_STORAGE_DIR}
RUN mkdir -p "$BACKEND_FILE_STORAGE_DIR"

# Create non-root user
RUN addgroup -g 101 -S nodejs && \
    adduser -S nodejs -u 101 -G nodejs

# Change ownership of storage directories
RUN chown -R nodejs:nodejs "$BACKEND_FILE_STORAGE_DIR"

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:4000/health || exit 1

EXPOSE 4000

ENTRYPOINT ["./docker-entrypoint.sh"]
