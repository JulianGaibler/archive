# Frontend Dockerfile - Multi-stage build for production
FROM node:22-alpine AS builder

WORKDIR /app

# Copy frontend package files
COPY frontend/package*.json ./

# Install all dependencies (including dev dependencies for build)
RUN npm ci

# Copy frontend source
COPY frontend/ ./

# Copy changelog.yaml to parent directory structure expected by the app
COPY changelog.yaml ../changelog.yaml

# Build arguments for environment variables needed during build
# These are required because Astro processes environment variables at build time
# to inject them into the client bundle according to the env-vars integration
ARG NODE_ENV
ARG CORS_ORIGIN
ARG FRONTEND_PUBLIC_API_BASE_URL
ARG FRONTEND_PUBLIC_GRAPHQL_ENDPOINT
ARG FRONTEND_PUBLIC_WS_ENDPOINT
ARG FRONTEND_FILES_BASE_URL
ARG FRONTEND_PRIVATE_API_BASE_URL
ARG FRONTEND_PRIVATE_GRAPHQL_ENDPOINT

# Set environment variables for build
ENV NODE_ENV=${NODE_ENV}
ENV CORS_ORIGIN=${CORS_ORIGIN}
ENV FRONTEND_PUBLIC_API_BASE_URL=${FRONTEND_PUBLIC_API_BASE_URL}
ENV FRONTEND_PUBLIC_GRAPHQL_ENDPOINT=${FRONTEND_PUBLIC_GRAPHQL_ENDPOINT}
ENV FRONTEND_PUBLIC_WS_ENDPOINT=${FRONTEND_PUBLIC_WS_ENDPOINT}
ENV FRONTEND_FILES_BASE_URL=${FRONTEND_FILES_BASE_URL}
ENV FRONTEND_PRIVATE_API_BASE_URL=${FRONTEND_PRIVATE_API_BASE_URL}
ENV FRONTEND_PRIVATE_GRAPHQL_ENDPOINT=${FRONTEND_PRIVATE_GRAPHQL_ENDPOINT}

# Build the frontend
RUN npm run build

# Production stage
FROM node:22-alpine AS production

# Install wget for health checks
RUN apk add --no-cache wget

WORKDIR /app

# Copy frontend package files
COPY frontend/package*.json ./

# Install only production dependencies
RUN npm ci --omit=dev && npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist

# Copy startup script
COPY frontend/docker-scripts/start-frontend.sh /app/start.sh
RUN chmod +x /app/start.sh

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 -G nodejs

# Change ownership
RUN chown -R nodejs:nodejs /app

# Create the static files directory with proper permissions
RUN mkdir -p /static-files && chown -R nodejs:nodejs /static-files

# Switch to non-root user
USER nodejs

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:4321/health.json || exit 1

EXPOSE 4321

CMD ["/app/start.sh"]
